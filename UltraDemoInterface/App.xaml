<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="UltraDemoInterface.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
    	
    	<!--LinearBlueBrush-->
    	<LinearGradientBrush x:Key="LinearBlueBrush" StartPoint="0,0" EndPoint="0,1">
    		<GradientStop Color="#88E8F9" Offset="0.0"/>     
	    	<GradientStop Color="#40A0B1" Offset="1.0"/> 		
		</LinearGradientBrush>
		
		<!--LinearOrangeBrush-->
		<LinearGradientBrush x:Key="LinearOrangeBrush" StartPoint="0,0" EndPoint="0,1">
    		<GradientStop Color="#FFDC60" Offset="0.0"/>     
	    	<GradientStop Color="#EB8A0E" Offset="1.0"/> 		
		</LinearGradientBrush>
		
		<!--LinearGreenBrush-->
		<LinearGradientBrush x:Key="LinearGreenBrush" StartPoint="0,0" EndPoint="0,1">
    		<GradientStop Color="#CDF25D" Offset="0.0"/>     
	    	<GradientStop Color="#7EA30E" Offset="1.0"/> 		
		</LinearGradientBrush>
		
		<!--LinearWhiteBrush-->
		<LinearGradientBrush x:Key="LinearWhiteBrush" StartPoint="0,0" EndPoint="0,1">
    		<GradientStop Color="#FFFFFF" Offset="0.0"/>     
	    	<GradientStop Color="#E8E8E8" Offset="1.0"/> 		
		</LinearGradientBrush>
		
		<!--LinearGrayBrush-->
		<LinearGradientBrush x:Key="LinearGrayBrush" StartPoint="0,0" EndPoint="0,1">
    		<GradientStop Color="#CCCCCC" Offset="0.0"/>     
	    	<GradientStop Color="#999999" Offset="1.0"/> 		
		</LinearGradientBrush>

        <!--LinearBlackBrush-->
        <LinearGradientBrush x:Key="LinearBlackBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#676565" Offset="0.0"/>
            <GradientStop Color="#222121" Offset="1.0"/>
        </LinearGradientBrush>

        <!--GeneralDropShadowEffect-->
		<DropShadowEffect x:Key="GeneralDropShadowEffect" Color="#4C7880" Opacity="0.5"
		ShadowDepth="4" Direction="270"/>
		
		<!--GeneralBlurEffect-->
		<BlurEffect x:Key="GeneralBlurEffect" Radius="4"/>
		
		<!--TurnOrangeStoryboard-->
		<Storyboard x:Key="TurnOrangeStoryboard">
			<ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[0].Color">
				<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFDC60">
					<EasingColorKeyFrame.EasingFunction>
						<CubicEase EasingMode="EaseOut"/>
					</EasingColorKeyFrame.EasingFunction>
				</EasingColorKeyFrame>
			</ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[1].Color">
				<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#EB8A0E">
					<EasingColorKeyFrame.EasingFunction>
						<CubicEase EasingMode="EaseOut"/>
					</EasingColorKeyFrame.EasingFunction>
				</EasingColorKeyFrame>
			</ColorAnimationUsingKeyFrames>
		</Storyboard>
		
		<!--TurnBlueStoryboard-->
		<Storyboard x:Key="TurnBlueStoryboard">
			<ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[0].Color">
				<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#88E8F9">
					<EasingColorKeyFrame.EasingFunction>
						<CubicEase EasingMode="EaseOut"/>
					</EasingColorKeyFrame.EasingFunction>
				</EasingColorKeyFrame>
			</ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[1].Color">
				<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#40A0B1">
					<EasingColorKeyFrame.EasingFunction>
						<CubicEase EasingMode="EaseOut"/>
					</EasingColorKeyFrame.EasingFunction>
				</EasingColorKeyFrame>
			</ColorAnimationUsingKeyFrames>
		</Storyboard>
		
		<!--TurnGreenStoryboard-->
		<Storyboard x:Key="TurnGreenStoryboard">
			<ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[0].Color">
				<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#CDF25D">
					<EasingColorKeyFrame.EasingFunction>
						<CubicEase EasingMode="EaseOut"/>
					</EasingColorKeyFrame.EasingFunction>
				</EasingColorKeyFrame>
			</ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[1].Color">
				<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#7EA30E">
					<EasingColorKeyFrame.EasingFunction>
						<CubicEase EasingMode="EaseOut"/>
					</EasingColorKeyFrame.EasingFunction>
				</EasingColorKeyFrame>
			</ColorAnimationUsingKeyFrames>
		</Storyboard>
		
		<!--TurnWhiteStoryboard-->
		<Storyboard x:Key="TurnWhiteStoryboard">
			<ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[0].Color">
				<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFFFFF">
					<EasingColorKeyFrame.EasingFunction>
						<CubicEase EasingMode="EaseOut"/>
					</EasingColorKeyFrame.EasingFunction>
				</EasingColorKeyFrame>
			</ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[1].Color">
				<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#E8E8E8">
					<EasingColorKeyFrame.EasingFunction>
						<CubicEase EasingMode="EaseOut"/>
					</EasingColorKeyFrame.EasingFunction>
				</EasingColorKeyFrame>
			</ColorAnimationUsingKeyFrames>
		</Storyboard>
		
		<!--TurnGrayStoryboard-->
		<Storyboard x:Key="TurnGrayStoryboard">
			<ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[0].Color">
				<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#CCCCCC">
					<EasingColorKeyFrame.EasingFunction>
						<CubicEase EasingMode="EaseOut"/>
					</EasingColorKeyFrame.EasingFunction>
				</EasingColorKeyFrame>
			</ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[1].Color">
				<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#999999">
					<EasingColorKeyFrame.EasingFunction>
						<CubicEase EasingMode="EaseOut"/>
					</EasingColorKeyFrame.EasingFunction>
				</EasingColorKeyFrame>
			</ColorAnimationUsingKeyFrames>
		</Storyboard>

        <!--TurnBlackStoryboard-->
        <Storyboard x:Key="TurnBlackStoryboard">
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[0].Color">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#676565">
                    <EasingColorKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background"
			Storyboard.TargetProperty="Fill.GradientStops[1].Color">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#222121">
                    <EasingColorKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--ScaleSmallStoryboard-->
		<Storyboard x:Key="ScaleSmallStoryboard">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Grid"
			Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
				<LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Grid"
			Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
				<LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		
		<!--ScaleOriginStoryboard-->
		<Storyboard x:Key="ScaleOriginStoryboard">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Grid"
			Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
				<LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Grid"
			Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
				<LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		
        <!--Circle Button-->
		<ControlTemplate x:Key="CircleButtonTemplate" TargetType="{x:Type Button}">
			<Grid x:Name="Grid" Width="48" Height="48" 
			HorizontalAlignment="Center" VerticalAlignment="Center">
				<Grid.RenderTransform>
					<ScaleTransform CenterX="20" CenterY="20"/>
				</Grid.RenderTransform>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal"
						Storyboard="{StaticResource TurnWhiteStoryboard}"/>
						<VisualState x:Name="MouseOver"
						Storyboard="{StaticResource TurnOrangeStoryboard}"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Ellipse Width="36" Height="36" Fill="#333333" Effect="{StaticResource GeneralBlurEffect}"/>
				<Ellipse Width="34" Height="34" Fill="#333333" Effect="{StaticResource GeneralDropShadowEffect}"/>
                <Ellipse x:Name="Background" Width="36" Height="36"
                Fill="{StaticResource LinearWhiteBrush}"/>
                <ContentPresenter RecognizesAccessKey="True"
				HorizontalAlignment="Center" VerticalAlignment="Center"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsPressed" Value="True">
					<Trigger.EnterActions>
						<BeginStoryboard Storyboard="{StaticResource ScaleSmallStoryboard}"/>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard Storyboard="{StaticResource ScaleOriginStoryboard}"/>
					</Trigger.ExitActions>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		
		<!--Ellipse Button-->
		<ControlTemplate x:Key="EllipseButtonTemplate" TargetType="{x:Type Button}">
			<Grid x:Name="Grid" Width="120" Height="40" 
			HorizontalAlignment="Center" VerticalAlignment="Center">
				<Grid.RenderTransform>
					<ScaleTransform CenterX="60" CenterY="20"/>
				</Grid.RenderTransform>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal"
						Storyboard="{StaticResource TurnWhiteStoryboard}"/>
						<VisualState x:Name="MouseOver"
						Storyboard="{StaticResource TurnOrangeStoryboard}"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Rectangle RadiusX="16" RadiusY="16" Height="32" Width="96"
				Fill="#333333" Effect="{StaticResource GeneralBlurEffect}"/>
				<Rectangle RadiusX="16" RadiusY="16" Height="30" Width="94"
				Fill="#333333" Effect="{StaticResource GeneralDropShadowEffect}"/>
				<Rectangle x:Name="Background" RadiusX="16" RadiusY="16" Height="32" Width="96"
				Fill="{StaticResource LinearWhiteBrush}"/>
                <ContentPresenter RecognizesAccessKey="True"
				HorizontalAlignment="Center" VerticalAlignment="Center"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsPressed" Value="True">
					<Trigger.EnterActions>
						<BeginStoryboard Storyboard="{StaticResource ScaleSmallStoryboard}"/>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard Storyboard="{StaticResource ScaleOriginStoryboard}"/>
					</Trigger.ExitActions>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		
		<!--TopBarSwitchButtonTemplate-->
		<ControlTemplate x:Key="TopBarSwitchButtonTemplate" TargetType="{x:Type RadioButton}">
			<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal"/>
						<VisualState x:Name="MouseOver"
						Storyboard="{StaticResource TurnOrangeStoryboard}"/>
					</VisualStateGroup>
					<VisualStateGroup x:Name="CheckedStates">
						<VisualState x:Name="Checked"
						Storyboard="{StaticResource TurnBlackStoryboard}"/>
						<!--<VisualState x:Name="Unchecked"
						Storyboard="{StaticResource TurnWhiteStoryboard}"/>-->
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Rectangle x:Name="Background" Height="30" Width="60"
				Stroke="#E1E1E1" StrokeThickness="1"
				Fill="{StaticResource LinearWhiteBrush}"/>
				<ContentPresenter Name="Text"  RecognizesAccessKey="True" 
				HorizontalAlignment="Center" VerticalAlignment="Center"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsChecked" Value="True">
					<Setter TargetName="Background" Property="Fill" Value="{StaticResource LinearBlackBrush}"/>
                    <Setter TargetName="Text" Property="TextBlock.Foreground" Value="White"/>
				</Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter TargetName="Text" Property="TextBlock.Foreground" Value="Black"/>
				</Trigger>
            </ControlTemplate.Triggers>
		</ControlTemplate>
		
		<!--HorizontalThumbTemplate-->
		<ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="{x:Type Thumb}">
			<Grid x:Name="Grid">
				<Grid.RenderTransform>
					<ScaleTransform CenterX="9" CenterY="13"/>
				</Grid.RenderTransform>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal"
						Storyboard="{StaticResource TurnWhiteStoryboard}"/>
						<VisualState x:Name="MouseOver"
						Storyboard="{StaticResource TurnOrangeStoryboard}"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Rectangle Height="26" Width="18" Fill="#333333" RadiusX="5" RadiusY="5"
				Effect="{StaticResource GeneralDropShadowEffect}"/>
				<Rectangle x:Name="Background" Height="26" Width="20" Stroke="#333333" RadiusX="5" RadiusY="5"
				Fill="{StaticResource LinearWhiteBrush}"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsDragging" Value="True">
					<Trigger.EnterActions>
						<BeginStoryboard Storyboard="{StaticResource ScaleSmallStoryboard}"/>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard Storyboard="{StaticResource ScaleOriginStoryboard}"/>
					</Trigger.ExitActions>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		
		<!--HorizontalSliderTemplate-->
		<ControlTemplate x:Key="HorizontalSliderTemplate" TargetType="{x:Type Slider}">
			<Grid x:Name="Root">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Rectangle Stroke="#999999" Fill="#CCCCCC" StrokeThickness="1.5"
				Height="10" RadiusX="3" RadiusY="3" Margin="5,0,5,0"
				VerticalAlignment="Center"/>
				<Track x:Name="PART_Track" Grid.Row="1" Width="{TemplateBinding Width}">
			  		<Track.Thumb>
			  			<Thumb x:Name="Thumb" Width="20" Template="{StaticResource HorizontalThumbTemplate}"/>
			  		</Track.Thumb>
			  	</Track>
			</Grid>
		</ControlTemplate>
		
		<!--WindowTabItem-->
		<ControlTemplate x:Key="WindowTabItem" TargetType="{x:Type TabItem}">
			<Grid x:Name="Grid" SnapsToDevicePixels="True">
				<Rectangle Width="80" Height="25" RadiusX="5" RadiusY="5" Fill="#333333"
				Effect="{StaticResource GeneralBlurEffect}"/>
				<Rectangle x:Name="Background2" Width="80" Height="23" Margin="0,5,0,0"
				Fill="{StaticResource LinearWhiteBrush}"/>
				<Rectangle x:Name="Background" Width="80" Height="25" RadiusX="5" RadiusY="5"
				Fill="{StaticResource LinearWhiteBrush}"/>
				<ContentPresenter x:Name="Content" ContentSource="Header"
				 HorizontalAlignment="Center" RecognizesAccessKey="True" VerticalAlignment="Center"/>
            </Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter TargetName="Background" Property="Fill" Value="{StaticResource LinearBlackBrush}"/>
					<Setter TargetName="Background2" Property="Fill" Value="{StaticResource LinearBlackBrush}"/>
                    <Setter TargetName="Content" Property="TextBlock.Foreground" Value="White"/>
				</Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter TargetName="Content" Property="TextBlock.Foreground" Value="Black"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
		
		<!--WindowTabControl-->
		<ControlTemplate x:Key="WindowTabControl" TargetType="{x:Type TabControl}">
			<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
				<Grid.ColumnDefinitions>
					<ColumnDefinition x:Name="ColumnDefinition0"/>
					<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
					<RowDefinition x:Name="RowDefinition1" Height="*"/>
				</Grid.RowDefinitions>
				<TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
				<Border x:Name="ContentPanel" BorderBrush="{StaticResource LinearBlackBrush}" Background="#999999" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
					<ContentPresenter x:Name="PART_SelectedContentHost" Margin="5"/>
				</Border>
			</Grid>
		</ControlTemplate>
		<SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
		<SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
		
		<!--EllipseToggleButton-->
        <ControlTemplate x:Key="EllipseToggleButton"  TargetType="{x:Type CheckBox}">
			<Grid x:Name="Grid" Width="120" Height="40" 
			HorizontalAlignment="Center" VerticalAlignment="Center">
				<Grid.RenderTransform>
					<ScaleTransform CenterX="60" CenterY="20"/>
				</Grid.RenderTransform>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal"/>
						<VisualState x:Name="MouseOver"
						Storyboard="{StaticResource TurnOrangeStoryboard}"/>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckedStates">
                        <VisualState x:Name="Checked"
						Storyboard="{StaticResource TurnBlackStoryboard}"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
				<Rectangle RadiusX="16" RadiusY="16" Height="32" Width="96"
				Fill="#333333" Effect="{StaticResource GeneralBlurEffect}"/>
				<Rectangle RadiusX="16" RadiusY="16" Height="30" Width="94"
				Fill="#333333" Effect="{StaticResource GeneralDropShadowEffect}"/>
				<Rectangle x:Name="Background" RadiusX="16" RadiusY="16" Height="32" Width="96"
				Fill="{StaticResource LinearWhiteBrush}"/>
                <ContentPresenter RecognizesAccessKey="True"
				HorizontalAlignment="Center" VerticalAlignment="Center"/>
			</Grid>
            <ControlTemplate.Triggers>
				<Trigger Property="IsPressed" Value="True">
					<Trigger.EnterActions>
						<BeginStoryboard Storyboard="{StaticResource ScaleSmallStoryboard}"/>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard Storyboard="{StaticResource ScaleOriginStoryboard}"/>
					</Trigger.ExitActions>
				</Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Background" Property="Fill" Value="{StaticResource LinearBlackBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
		
		<!--TopBarMenuTemplate-->
        <ControlTemplate x:Key="TopBarMenuTemplate"  TargetType="{x:Type Menu}">
            <Border BorderBrush="#00000000" SnapsToDevicePixels="true">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
        </ControlTemplate>

        <!--TopBarMenuItemStyle-->
        <LinearGradientBrush x:Key="MenuItemSelectionFill" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="#34C5EBFF" Offset="0"/>
        	<GradientStop Color="#3481D8FF" Offset="1"/>
        </LinearGradientBrush>
        <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        	<Grid SnapsToDevicePixels="true">
        		<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
        		<Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2"/>
        		<Grid>
        			<Grid.ColumnDefinitions>
        				<ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
        				<ColumnDefinition Width="4"/>
        				<ColumnDefinition Width="*"/>
        				<ColumnDefinition Width="37"/>
        				<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
        				<ColumnDefinition Width="17"/>
        			</Grid.ColumnDefinitions>
        			<ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
        			<Border x:Name="GlyphPanel" BorderBrush="#CDD3E6" BorderThickness="1" Background="#E6EFF4" CornerRadius="3" Height="22" Margin="1" Visibility="Hidden" Width="22">
        				<Path x:Name="Glyph" Data="{StaticResource Checkmark}" Fill="#0C12A1" FlowDirection="LeftToRight" Height="11" Width="9"/>
        			</Border>
        			<ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        			<TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
        		</Grid>
        	</Grid>
        	<ControlTemplate.Triggers>
        		<Trigger Property="Icon" Value="{x:Null}">
        			<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
        		</Trigger>
        		<Trigger Property="IsChecked" Value="true">
        			<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
        			<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
        		</Trigger>
        		<Trigger Property="IsHighlighted" Value="true">
        			<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}"/>
        			<Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
        			<Setter Property="Stroke" TargetName="InnerBorder" Value="#40FFFFFF"/>
        		</Trigger>
        		<Trigger Property="IsEnabled" Value="false">
        			<Setter Property="Foreground" Value="#FF9A9A9A"/>
        			<Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
        			<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
        			<Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
        		</Trigger>
        	</ControlTemplate.Triggers>
        </ControlTemplate>
        <LinearGradientBrush x:Key="MenuItemPressedFill" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="#28717070" Offset="0"/>
        	<GradientStop Color="#50717070" Offset="0.75"/>
        	<GradientStop Color="#90717070" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="SubMenuBackgroundBrush" Color="#FFF5F5F5"/>
        <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
        <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
        	<Setter Property="ClickMode" Value="Hover"/>
        	<Setter Property="MinWidth" Value="0"/>
        	<Setter Property="MinHeight" Value="0"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type RepeatButton}">
        				<DockPanel Background="Transparent" SnapsToDevicePixels="true">
        					<Rectangle x:Name="R1" DockPanel.Dock="Right" Fill="Transparent" Width="1"/>
        					<Rectangle x:Name="B1" DockPanel.Dock="Bottom" Fill="Transparent" Height="1"/>
        					<Rectangle x:Name="L1" DockPanel.Dock="Left" Fill="Transparent" Width="1"/>
        					<Rectangle x:Name="T1" DockPanel.Dock="Top" Fill="Transparent" Height="1"/>
        					<ContentPresenter x:Name="ContentContainer" HorizontalAlignment="Center" Margin="2,2,2,2" VerticalAlignment="Center"/>
        				</DockPanel>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Fill" TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
        						<Setter Property="Fill" TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
        						<Setter Property="Fill" TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
        						<Setter Property="Fill" TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
        						<Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
        <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
        	<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        	<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ScrollViewer}">
        				<Grid SnapsToDevicePixels="true">
        					<Grid.ColumnDefinitions>
        						<ColumnDefinition Width="*"/>
        					</Grid.ColumnDefinitions>
        					<Grid.RowDefinitions>
        						<RowDefinition Height="Auto"/>
        						<RowDefinition Height="*"/>
        						<RowDefinition Height="Auto"/>
        					</Grid.RowDefinitions>
        					<Border Grid.Column="0" Grid.Row="1">
        						<ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
        					</Border>
        					<RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineUpCommand}" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
        						<RepeatButton.Visibility>
        							<MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
        								<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
        								<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
        								<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
        								<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
        							</MultiBinding>
        						</RepeatButton.Visibility>
        						<Path Data="{StaticResource UpArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        					</RepeatButton>
        					<RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineDownCommand}" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
        						<RepeatButton.Visibility>
        							<MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
        								<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
        								<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
        								<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
        								<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
        							</MultiBinding>
        						</RepeatButton.Visibility>
        						<Path Data="{StaticResource DownArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        					</RepeatButton>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
        	<Border BorderBrush="#FF959595" BorderThickness="1" Background="{StaticResource SubMenuBackgroundBrush}">
        		<Grid>
        			<Rectangle Fill="#F1F1F1" HorizontalAlignment="Left" Margin="2" RadiusY="2" RadiusX="2" Width="28"/>
        			<Rectangle Fill="#E2E3E3" HorizontalAlignment="Left" Margin="30,2,0,2" Width="1"/>
        			<Rectangle Fill="White" HorizontalAlignment="Left" Margin="31,2,0,2" Width="1"/>
        			<ContentPresenter Grid.ColumnSpan="2" Margin="1,0"/>
        		</Grid>
        	</Border>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="true">
                <Rectangle x:Name="OuterBorder"  Width="60" Height="30" Fill="#4B777F" Effect="{StaticResource GeneralBlurEffect}" Visibility="Hidden"/>
        		<Rectangle x:Name="Bg" Width="60" Height="30"/>
                <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
        			<Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>
        			<ContentPresenter ContentSource="Header" VerticalAlignment="Center"  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        		</DockPanel>
        		<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
        			<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
        				<ContentControl x:Name="SubMenuBorder" IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
        					<ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
        						<Grid RenderOptions.ClearTypeHint="Enabled">
        							<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
        								<Rectangle Fill="{StaticResource SubMenuBackgroundBrush}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
        							</Canvas>
        							<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
        						</Grid>
        					</ScrollViewer>
        				</ContentControl>
        			</Microsoft_Windows_Themes:SystemDropShadowChrome>
        		</Popup>
        	</Grid>
        	<ControlTemplate.Triggers>
        		<Trigger Property="IsSuspendingPopupAnimation" Value="true">
        			<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
        		</Trigger>
        		<Trigger Property="IsChecked" Value="true">
        			<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
        			<Setter Property="Visibility" TargetName="OuterBorder" Value="Hidden"/>
        		</Trigger>
        		<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        			<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
        			<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
        		</Trigger>
        		<Trigger Property="IsHighlighted" Value="true">
        			<Setter Property="Fill" TargetName="Bg" Value="{StaticResource LinearOrangeBrush}"/>
        			<Setter Property="Visibility" TargetName="OuterBorder" Value="Visible"/>
        		</Trigger>
        		<Trigger Property="IsKeyboardFocused" Value="true">
        			<Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
        			<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
        		</Trigger>
        		<Trigger Property="IsSubmenuOpen" Value="true">
        			<Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
        			<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
                    <Setter Property="Visibility" TargetName="OuterBorder" Value="Hidden"/>
        		</Trigger>
        		<Trigger Property="IsEnabled" Value="false">
        			<Setter Property="Foreground" Value="#FF9A9A9A"/>
        			<Setter Property="Fill" TargetName="GlyphPanel" Value="#848589"/>
        		</Trigger>
        	</ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        	<Grid SnapsToDevicePixels="true">
        		<Rectangle x:Name="OuterBorder" RadiusY="2" RadiusX="2"/>
        		<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Margin="1" RadiusY="1" RadiusX="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
        		<Rectangle x:Name="InnerBorder" Margin="2"/>
        		<DockPanel>
        			<ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
        			<Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>
        			<ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        		</DockPanel>
        	</Grid>
        	<ControlTemplate.Triggers>
        		<Trigger Property="Icon" Value="{x:Null}">
        			<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
        		</Trigger>
        		<Trigger Property="IsChecked" Value="true">
        			<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
        			<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
        		</Trigger>
        		<Trigger Property="IsHighlighted" Value="true">
        			<Setter Property="Stroke" TargetName="Bg" Value="#90717070"/>
        			<Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF"/>
        			<Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF"/>
        		</Trigger>
        		<Trigger Property="IsKeyboardFocused" Value="true">
        			<Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
        			<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
        			<Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
        		</Trigger>
        		<Trigger Property="IsEnabled" Value="false">
        			<Setter Property="Foreground" Value="#FF9A9A9A"/>
        			<Setter Property="Fill" TargetName="GlyphPanel" Value="#848589"/>
        		</Trigger>
        	</ControlTemplate.Triggers>
        </ControlTemplate>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        	<Grid SnapsToDevicePixels="true">
        		<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
        		<Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2" Stroke="Transparent" StrokeThickness="1"/>
        		<Grid>
        			<Grid.ColumnDefinitions>
        				<ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
        				<ColumnDefinition Width="4"/>
        				<ColumnDefinition Width="*"/>
        				<ColumnDefinition Width="37"/>
        				<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
        				<ColumnDefinition Width="17"/>
        			</Grid.ColumnDefinitions>
        			<ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
        			<Border x:Name="GlyphPanel" BorderBrush="#CDD3E6" BorderThickness="1" Background="#E6EFF4" CornerRadius="3" Height="22" Margin="1" Visibility="Hidden" Width="22">
        				<Path x:Name="Glyph" Data="{StaticResource Checkmark}" Fill="#0C12A1" FlowDirection="LeftToRight" Height="11" Width="9"/>
        			</Border>
        			<ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        			<TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}" Visibility="Collapsed"/>
        			<Path Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{TemplateBinding Foreground}" Margin="4,0,0,0" VerticalAlignment="Center"/>
        		</Grid>
        		<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
        			<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
        				<ContentControl x:Name="SubMenuBorder" IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
        					<ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
        						<Grid RenderOptions.ClearTypeHint="Enabled">
        							<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
        								<Rectangle Fill="{StaticResource SubMenuBackgroundBrush}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
        							</Canvas>
        							<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
        						</Grid>
        					</ScrollViewer>
        				</ContentControl>
        			</Microsoft_Windows_Themes:SystemDropShadowChrome>
        		</Popup>
        	</Grid>
        	<ControlTemplate.Triggers>
        		<Trigger Property="IsSuspendingPopupAnimation" Value="true">
        			<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
        		</Trigger>
        		<Trigger Property="IsHighlighted" Value="true">
        			<Setter Property="Stroke" TargetName="InnerBorder" Value="#D1DBF4FF"/>
        		</Trigger>
        		<Trigger Property="Icon" Value="{x:Null}">
        			<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
        		</Trigger>
        		<Trigger Property="IsChecked" Value="true">
        			<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
        			<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
        		</Trigger>
        		<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        			<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
        			<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
        		</Trigger>
        		<Trigger Property="IsHighlighted" Value="true">
        			<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}"/>
        			<Setter Property="Stroke" TargetName="Bg" Value="#8571CBF1"/>
        		</Trigger>
        		<Trigger Property="IsEnabled" Value="false">
        			<Setter Property="Foreground" Value="#FF9A9A9A"/>
        			<Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
        			<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
        			<Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
        		</Trigger>
        	</ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="TopBarMenuItemStyle" TargetType="{x:Type MenuItem}">
        	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        	<Style.Triggers>
        		<Trigger Property="Role" Value="TopLevelHeader">
        			<Setter Property="Padding" Value="7,2,8,3"/>
        			<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        		</Trigger>
        		<Trigger Property="Role" Value="TopLevelItem">
        			<Setter Property="Padding" Value="7,2,8,3"/>
        			<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        		</Trigger>
        		<Trigger Property="Role" Value="SubmenuHeader">
        			<Setter Property="Padding" Value="2,3,2,3"/>
        			<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        		</Trigger>
        		<Trigger Property="Role" Value="SubmenuItem">
        			<Setter Property="Padding" Value="2,3,2,3"/>
        		</Trigger>
        	</Style.Triggers>
        </Style>
		
		<!--WindowTemplate-->
    	<ControlTemplate x:Key="WindowTemplate"  TargetType="{x:Type Window}">
    		<Grid Name="Grid" d:DesignWidth="200" d:DesignHeight="100">
    			<Rectangle RadiusX="16" RadiusY="16" Fill="#333333" Margin="6"
    				Effect="{StaticResource GeneralBlurEffect}"/>
    			<Rectangle RadiusX="16" RadiusY="16" Fill="#333333" Margin="6"
    				Effect="{StaticResource GeneralDropShadowEffect}"/>
    			<Rectangle x:Name="Background" RadiusX="16" RadiusY="16" Margin="6"
    				Fill="{StaticResource LinearWhiteBrush}"/>
					<ContentPresenter/>
    			<ResizeGrip HorizontalAlignment="Right" VerticalAlignment="Bottom"
    				IsTabStop="False"/>
    		</Grid>
			<ControlTemplate.Triggers>
			</ControlTemplate.Triggers>
    	</ControlTemplate>
		
		<!--ComboBoxTemplate-->
        <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Name="Grid">
                            <Rectangle RadiusX="16" RadiusY="16" Fill="#333333" Effect="{StaticResource GeneralBlurEffect}"/>
                            <Rectangle Name="Background"  RadiusX="16" RadiusY="16" Fill="{StaticResource LinearWhiteBrush}"/>
                            <Grid HorizontalAlignment="Right" Width="40">
                                <Path Name="Arrow"  Fill="{StaticResource LinearBlackBrush}" HorizontalAlignment="Right">
                                    <Path.Data>
                                        <CombinedGeometry GeometryCombineMode="Union">
                                            <CombinedGeometry.Geometry1>
                                                <RectangleGeometry RadiusX="16" RadiusY="16" Rect="16,0,48,32"/>
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <RectangleGeometry Rect="0,0,32,32"/>
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                </Path>
                                <TextBlock Foreground="White" FontSize="20" FontWeight="Bold"  HorizontalAlignment="Center" VerticalAlignment="Center">
                                    ∨
                                </TextBlock> 
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource LinearOrangeBrush}"/>
                                <Setter Property="Fill" TargetName="Background" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate"  TargetType="{x:Type ComboBox}">
            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Grid.MinWidth>
                            <Binding ElementName="MainGrid" Path="ActualWidth"/>
                        </Grid.MinWidth>
                        <Rectangle RadiusX="16" RadiusY="16" Fill="#333333" Effect="{StaticResource GeneralBlurEffect}" Margin="5,2"/>
                        <Rectangle Name="Background"  RadiusX="16" RadiusY="16" Fill="White" Margin="5,2"/>
                        <ScrollViewer x:Name="DropDownScrollViewer" Margin="5,2">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <ItemsPresenter Margin="6" x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                </ItemsPresenter>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                </Popup>
                <ToggleButton Grid.ColumnSpan="2" 
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}"/>
                <ContentPresenter TextBlock.FontSize="14"  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="Center" IsHitTestVisible="false"  Margin="24,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
            </Grid>
        </ControlTemplate>
        
        <!--ListBoxItemTemplate-->
        <ControlTemplate x:Key="ListBoxItemTemplate"  TargetType="{x:Type ListBoxItem}">
            <Grid Name="Grid">
                <Rectangle Name="Background"/>
                <ContentPresenter Margin="4"  HorizontalAlignment="Left" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Fill" TargetName="Background" Value="#FFD654"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="Background" Value="#FFD654"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <!--ListBoxTemplate-->
        <ControlTemplate x:Key="ListBoxTemplate"  TargetType="{x:Type ListBox}">
            <Grid Name="Grid">
                <Rectangle Name="Background"  RadiusX="16" RadiusY="16" Fill="#333333" Margin="5,2"/>
                <Rectangle RadiusX="16" RadiusY="16" Fill="White" Effect="{StaticResource GeneralBlurEffect}" Margin="5,2"/>
                
                <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                    <ItemsPresenter Margin="10,12"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </ScrollViewer>
            </Grid>
            
        </ControlTemplate>
        
        
    </Application.Resources>
</Application>
